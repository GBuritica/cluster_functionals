infor1       <- rbind( infor1, c(estim4, 2, th4, bu[i], thr2[1], mode=j))  ##la-inference
}
else{
#if(p!=alpha)  infor2       <- rbind( infor2, c(estim1, 3, th2, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim4, 2, th4, bu[i], thr2[1], mode=j))
}
}
}
}
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
#thet <- c1
niceplot <- function(infor,estim, title){
gg<- ggplot(1/infor, aes( y = DATA,  type=as.factor(BL), fill = as.factor(TYPE) ))+
#fill=as.factor(MODE), colour = as.factor(MODE)) +
geom_boxplot(#"#4271AE",
colour = "#4271AE", alpha = 1,outlier.colour = "azure2", outlier.shape = 1, outlier.size = 0.1, outlier.alpha = 1)+ #+geom_point(alpha=0.1,pch=16,size=0.5)+
scale_fill_manual(values = c('white',"lightsteelblue3","gray"))
#geom_hline(yintercept=thet, color = "darkgrey", alpha = 0.5,lty=2)
gg <-  addingtitles(gg,"block length",title,estim)
return(gg)
}
addingtitles <- function(gg,title,title2=" ",estim){
gg <- gg +
geom_hline(yintercept=estim,lty=2, col="blue", alpha=1) +
scale_y_continuous(name =" " , labels = c(0,round(estim,3),1), breaks = c(0,round(estim,3),1), limits=c(0,3)
)+
scale_x_continuous(name = title, labels=sapply(1:6, function(k) 2^k), breaks=seq(-0.32,0.32,0.125) )+
theme_bw()+
ggtitle(title2)+
theme(#panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 10 ,face = "bold", hjust=0),
text=element_text(),
axis.title = element_text(size=50),
axis.title.y= element_text(size=24,angle=0),
axis.title.x= element_text(size=10,angle=0),
axis.text.x = element_text(colour="black", size = 10, angle = 15 ),
axis.text.y = element_text(colour="black", size = 10),
axis.line =   element_line(size=0.1, colour = "black"),
legend.position="none")
return(gg)
}
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
rm(estim2,estim3,estim4)
n <-2000
thr2   <- thr <- c(2)
bu     <- sapply(1:6, function(k) 2^k)
phi0    <- c(0.8,0.5);
infor1 <- data.frame( "DATA" = NULL, "TYPE"=NULL, "zn" =NULL, "BL" = NULL, "TH" = NULL, "MODE" = NULL )
infor2 <- data.frame( "DATA" = NULL, "TYPE"=NULL, "zn" =NULL, "BL" = NULL, "TH" = NULL, "MODE" = NULL )
alpha0 <- 0.7#1.3#
thet <-   sapply(1:length(phi0), function(k) 1-phi0[k]^alpha0)
c1   <-   1/sapply(1:length(phi0), function(k) (1-phi0[k])^alpha0/thet[k])
title<-   TeX('$\\widehat{c}(1)$')# TeX('$\\widehat{\\theta}_{| \\mathbf{X}|}$') #
for(N in 1:100){
print(N)
for(j in 1:length(phi0)){
phi    <- phi0[j]
path   <- abs(arima.sim(n=n, list(ar=phi, ma=0), rand.gen=function(n) rt(n,df=alpha0) ))
n      <- length(path)
alpha  <- (1/alphaestimator(path,k1=floor(n^0.8))$xi)#;print(alpha)
#alpha <- alpha0
sorted <- sort(path,decreasing = T)
p      <- 1#alpha#
for(i in 1:length(bu)){
mn  <- floor(n/bu[i])
maxi  <- sapply( 1:mn, function(k) max(   path[((k-1)*bu[i] + 1):(k*bu[i])] )  )
sumaalpha <- sapply( 1:mn, function(k) sum(   path[((k-1)*bu[i] + 1):(k*bu[i])]^alpha )  )
#Sorted Paths
n2 <- mn
#sortedmaxi <- sort(maxi, decreasing = TRUE); #print(n2)
#sortedsumaalpha <- sort(sumaalpha, decreasing=T)
#Thresholds
kn      <-  max(1,floor( (n)/bu[i]^thr2[1] ) )+1
th3     <- sort(maxi, partial = mn - kn +1 )[(mn-kn+1)]   #sortedmaxi[ max(1,floor( (n)/bu[i]^thr2[1])) +1 ]                ## supremom norm th.
th4     <- sort(sumaalpha, partial = mn - kn +1 )[(mn-kn+1)] #sortedsumaalpha[ max(1,floor( (n)/bu[i]^thr2[1]))+1 ]
#Index
ind2     <- which(maxi > th3 )                                         ## Careful not to use >=.
ind4    <-  which(sumaalpha > th4)
if(p != alpha){
suma  <- sapply( 1:floor(n/bu[i]), function(k) sum(   path[((k-1)*bu[i] + 1):(k*bu[i])]^p )  )
#sortedsuma <- sort(suma, decreasing = TRUE)
## thresholds
#th1     <- th11 <- sorted[ max(2,floor(n^thr[1])) ]                        ## empirical th.
th2     <-   sort(suma, partial = mn-kn+1)[(mn-kn+1)]    #sortedsuma[ max(1,floor( (n)/bu[i]^thr2[1]))+1 ]                ## p-norm th.          ## a-norm th
## index
#ind1     <- which(suma > th1^(alpha) )
ind1     <- which(suma > th2 )                                            ## choosing clusters
# functions c(1)
g1 <- function(vector, p)      (sum(vector^alpha)/(sum(vector^p)^alpha))          ##1/c(p)
g2 <- function(vector,th3)     sum( sum(vector) > th3 )
g3 <- function(vector,th3)     sum( vector > th3 )
g4 <- function(vector, p)      (sum(vector^p)^alpha/(sum(vector^alpha)))            ## c(p)
#estim1       <-  mean( sapply(ind1,  function(k)    g1(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2       <-  sum(  sapply(1:n2,  function(k)    g2(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim3       <-  sum(  sapply(1:n2,  function(k)    g3(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim4       <-  mean( sapply(ind4, function(k)   g4(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2       <-   estim2/estim3
}
else{
# functions theta
g1 <- function(vector, p)      (max(vector^p)/sum(vector^p))
g2 <- function(vector,th3)     sum( vector > th3)#sum(vector^p)/max(vector^p)  #
estim4       <-  mean( sapply(ind4, function(k)     g1(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2      <-   mean(sapply(ind2, function(k)      g2(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim2 <- 1/estim2
}
if(j==1){
#if(p!=alpha)  infor1       <- rbind( infor1, c(estim1, 3, th2, bu[i], thr2[1], mode=j))  ##lp inference
infor1       <- rbind( infor1, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor1       <- rbind( infor1, c(estim4, 2, th4, bu[i], thr2[1], mode=j))  ##la-inference
}
else{
#if(p!=alpha)  infor2       <- rbind( infor2, c(estim1, 3, th2, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim4, 2, th4, bu[i], thr2[1], mode=j))
}
}
}
}
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
alpha
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
n <-4000
thr2   <- thr <- c(2)
bu     <- sapply(1:6, function(k) 2^k)
phi0    <- c(0.8,0.5);
infor1 <- data.frame( "DATA" = NULL, "TYPE"=NULL, "zn" =NULL, "BL" = NULL, "TH" = NULL, "MODE" = NULL )
infor2 <- data.frame( "DATA" = NULL, "TYPE"=NULL, "zn" =NULL, "BL" = NULL, "TH" = NULL, "MODE" = NULL )
alpha0 <- 0.7#1.3#
thet <-   sapply(1:length(phi0), function(k) 1-phi0[k]^alpha0)
c1   <-   1/sapply(1:length(phi0), function(k) (1-phi0[k])^alpha0/thet[k])
title<-   TeX('$\\widehat{c}(1)$')# TeX('$\\widehat{\\theta}_{| \\mathbf{X}|}$') #
for(N in 1:100){
print(N)
for(j in 1:length(phi0)){
phi    <- phi0[j]
path   <- abs(arima.sim(n=n, list(ar=phi, ma=0), rand.gen=function(n) rt(n,df=alpha0) ))
n      <- length(path)
alpha  <- (1/alphaestimator(path,k1=floor(n^0.8))$xi)#;print(alpha)
#alpha <- alpha0
sorted <- sort(path,decreasing = T)
p      <- 1#alpha#
for(i in 1:length(bu)){
mn  <- floor(n/bu[i])
maxi  <- sapply( 1:mn, function(k) max(   path[((k-1)*bu[i] + 1):(k*bu[i])] )  )
sumaalpha <- sapply( 1:mn, function(k) sum(   path[((k-1)*bu[i] + 1):(k*bu[i])]^alpha )  )
#Sorted Paths
n2 <- mn
#sortedmaxi <- sort(maxi, decreasing = TRUE); #print(n2)
#sortedsumaalpha <- sort(sumaalpha, decreasing=T)
#Thresholds
kn      <-  max(1,floor( (n)/bu[i]^thr2[1] ) )+1
th3     <- sort(maxi, partial = mn - kn +1 )[(mn-kn+1)]   #sortedmaxi[ max(1,floor( (n)/bu[i]^thr2[1])) +1 ]                ## supremom norm th.
th4     <- sort(sumaalpha, partial = mn - kn +1 )[(mn-kn+1)] #sortedsumaalpha[ max(1,floor( (n)/bu[i]^thr2[1]))+1 ]
#Index
ind2     <- which(maxi > th3 )                                         ## Careful not to use >=.
ind4    <-  which(sumaalpha > th4)
if(p != alpha){
suma  <- sapply( 1:floor(n/bu[i]), function(k) sum(   path[((k-1)*bu[i] + 1):(k*bu[i])]^p )  )
#sortedsuma <- sort(suma, decreasing = TRUE)
## thresholds
#th1     <- th11 <- sorted[ max(2,floor(n^thr[1])) ]                        ## empirical th.
th2     <-  sort(suma, partial = mn-kn+1)[(mn-kn+1)]    #sortedsuma[ max(1,floor( (n)/bu[i]^thr2[1]))+1 ]                ## p-norm th.          ## a-norm th
## index
#ind1     <- which(suma > th1^(alpha) )
ind1     <- which(suma > th2 )                                            ## choosing clusters
# functions c(1)
g1 <- function(vector, p)      (sum(vector^alpha)/(sum(vector^p)^alpha))          ##1/c(p)
g2 <- function(vector,th3)     sum( sum(vector) > th3 )
g3 <- function(vector,th3)     sum( vector > th3 )
g4 <- function(vector, p)      (sum(vector^p)^alpha/(sum(vector^alpha)))            ## c(p)
#estim1       <-  mean( sapply(ind1,  function(k)    g1(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2       <-  sum(  sapply(1:n2,  function(k)    g2(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim3       <-  sum(  sapply(1:n2,  function(k)    g3(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim4       <-  mean( sapply(ind4, function(k)   g4(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2       <-   estim2/estim3
}
else{
# functions theta
g1 <- function(vector, p)      (max(vector^p)/sum(vector^p))
g2 <- function(vector,th3)     sum( vector > th3)#sum(vector^p)/max(vector^p)  #
estim4       <-  mean( sapply(ind4, function(k)     g1(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2      <-   mean(sapply(ind2, function(k)      g2(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim2 <- 1/estim2
}
if(j==1){
#if(p!=alpha)  infor1       <- rbind( infor1, c(estim1, 3, th2, bu[i], thr2[1], mode=j))  ##lp inference
infor1       <- rbind( infor1, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor1       <- rbind( infor1, c(estim4, 2, th4, bu[i], thr2[1], mode=j))  ##la-inference
}
else{
#if(p!=alpha)  infor2       <- rbind( infor2, c(estim1, 3, th2, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim4, 2, th4, bu[i], thr2[1], mode=j))
}
}
}
}
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
#thet <- c1
niceplot <- function(infor,estim, title){
gg<- ggplot(infor, aes( y = DATA,  type=as.factor(BL), fill = as.factor(TYPE) ))+
#fill=as.factor(MODE), colour = as.factor(MODE)) +
geom_boxplot(#"#4271AE",
colour = "#4271AE", alpha = 1,outlier.colour = "azure2", outlier.shape = 1, outlier.size = 0.1, outlier.alpha = 1)+ #+geom_point(alpha=0.1,pch=16,size=0.5)+
scale_fill_manual(values = c('white',"lightsteelblue3","gray"))
#geom_hline(yintercept=thet, color = "darkgrey", alpha = 0.5,lty=2)
gg <-  addingtitles(gg,"block length",title,estim)
return(gg)
}
#thet <- c1
niceplot <- function(infor,estim, title){
gg<- ggplot(infor, aes( y = DATA,  type=as.factor(BL), fill = as.factor(TYPE) ))+
#fill=as.factor(MODE), colour = as.factor(MODE)) +
geom_boxplot(#"#4271AE",
colour = "#4271AE", alpha = 1,outlier.colour = "azure2", outlier.shape = 1, outlier.size = 0.1, outlier.alpha = 1)+ #+geom_point(alpha=0.1,pch=16,size=0.5)+
scale_fill_manual(values = c('white',"lightsteelblue3","gray"))
#geom_hline(yintercept=thet, color = "darkgrey", alpha = 0.5,lty=2)
gg <-  addingtitles(gg,"block length",title,estim)
return(gg)
}
addingtitles <- function(gg,title,title2=" ",estim){
gg <- gg +
geom_hline(yintercept=estim,lty=2, col="blue", alpha=1) +
scale_y_continuous(name =" " , labels = c(0,round(estim,3),1), breaks = c(0,round(estim,3),1), limits=c(0,3)
)+
scale_x_continuous(name = title, labels=sapply(1:6, function(k) 2^k), breaks=seq(-0.32,0.32,0.125) )+
theme_bw()+
ggtitle(title2)+
theme(#panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 10 ,face = "bold", hjust=0),
text=element_text(),
axis.title = element_text(size=50),
axis.title.y= element_text(size=24,angle=0),
axis.title.x= element_text(size=10,angle=0),
axis.text.x = element_text(colour="black", size = 10, angle = 15 ),
axis.text.y = element_text(colour="black", size = 10),
axis.line =   element_line(size=0.1, colour = "black"),
legend.position="none")
return(gg)
}
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
n <-2000
thr2   <- thr <- c(2)
bu     <- sapply(1:6, function(k) 2^k)
phi0    <- c(0.8,0.5);
infor1 <- data.frame( "DATA" = NULL, "TYPE"=NULL, "zn" =NULL, "BL" = NULL, "TH" = NULL, "MODE" = NULL )
infor2 <- data.frame( "DATA" = NULL, "TYPE"=NULL, "zn" =NULL, "BL" = NULL, "TH" = NULL, "MODE" = NULL )
alpha0 <- 0.7#1.3#
thet <-   sapply(1:length(phi0), function(k) 1-phi0[k]^alpha0)
c1   <-   1/sapply(1:length(phi0), function(k) (1-phi0[k])^alpha0/thet[k])
title<-   TeX('$\\widehat{c}(1)$')# TeX('$\\widehat{\\theta}_{| \\mathbf{X}|}$') #
for(N in 1:100){
print(N)
for(j in 1:length(phi0)){
phi    <- phi0[j]
path   <- abs(arima.sim(n=n, list(ar=phi, ma=0), rand.gen=function(n) rt(n,df=alpha0) ))
n      <- length(path)
alpha  <- (1/alphaestimator(path,k1=floor(n^0.8))$xi)#;print(alpha)
#alpha <- alpha0
sorted <- sort(path,decreasing = T)
p      <- 1#alpha#
for(i in 1:length(bu)){
mn  <- floor(n/bu[i])
maxi  <- sapply( 1:mn, function(k) max(   path[((k-1)*bu[i] + 1):(k*bu[i])] )  )
sumaalpha <- sapply( 1:mn, function(k) sum(   path[((k-1)*bu[i] + 1):(k*bu[i])]^alpha )  )
#Sorted Paths
n2 <- mn
#sortedmaxi <- sort(maxi, decreasing = TRUE); #print(n2)
#sortedsumaalpha <- sort(sumaalpha, decreasing=T)
#Thresholds
kn      <-  max(1,floor( (n)/bu[i]^thr2[1] ) )+1
th3     <- sort(maxi, partial = mn - kn +1 )[(mn-kn+1)]   #sortedmaxi[ max(1,floor( (n)/bu[i]^thr2[1])) +1 ]                ## supremom norm th.
th4     <- sort(sumaalpha, partial = mn - kn +1 )[(mn-kn+1)] #sortedsumaalpha[ max(1,floor( (n)/bu[i]^thr2[1]))+1 ]
#Index
ind2     <- which(maxi > th3 )                                         ## Careful not to use >=.
ind4    <-  which(sumaalpha > th4)
if(p != alpha){
suma  <- sapply( 1:floor(n/bu[i]), function(k) sum(   path[((k-1)*bu[i] + 1):(k*bu[i])]^p )  )
#sortedsuma <- sort(suma, decreasing = TRUE)
## thresholds
#th1     <- th11 <- sorted[ max(2,floor(n^thr[1])) ]                        ## empirical th.
th2     <-  sort(suma, partial = mn-kn+1)[(mn-kn+1)]    #sortedsuma[ max(1,floor( (n)/bu[i]^thr2[1]))+1 ]                ## p-norm th.          ## a-norm th
## index
#ind1     <- which(suma > th1^(alpha) )
ind1     <- which(suma > th2 )                                            ## choosing clusters
# functions c(1)
g1 <- function(vector, p)      (sum(vector^alpha)/(sum(vector^p)^alpha))          ##1/c(p)
g2 <- function(vector,th3)     sum( sum(vector) > th3 )
g3 <- function(vector,th3)     sum( vector > th3 )
g4 <- function(vector, p)      (sum(vector^p)^alpha/(sum(vector^alpha)))            ## c(p)
#estim1       <-  mean( sapply(ind1,  function(k)    g1(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2       <-  sum(  sapply(1:n2,  function(k)    g2(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim3       <-  sum(  sapply(1:n2,  function(k)    g3(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim4       <-  mean( sapply(ind4, function(k)   g4(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2       <-   estim2/estim3
}
else{
# functions theta
g1 <- function(vector, p)      (max(vector^p)/sum(vector^p))
g2 <- function(vector,th3)     sum( vector > th3)#sum(vector^p)/max(vector^p)  #
estim4       <-  mean( sapply(ind4, function(k)     g1(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2      <-   mean(sapply(ind2, function(k)      g2(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim2 <- 1/estim2
}
if(j==1){
#if(p!=alpha)  infor1       <- rbind( infor1, c(estim1, 3, th2, bu[i], thr2[1], mode=j))  ##lp inference
infor1       <- rbind( infor1, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor1       <- rbind( infor1, c(estim4, 2, th4, bu[i], thr2[1], mode=j))  ##la-inference
}
else{
#if(p!=alpha)  infor2       <- rbind( infor2, c(estim1, 3, th2, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim4, 2, th4, bu[i], thr2[1], mode=j))
}
}
}
}
n <-2000
thr2   <- thr <- c(2)
bu     <- sapply(1:6, function(k) 2^k)
phi0    <- c(0.8,0.5);
infor1 <- data.frame( "DATA" = NULL, "TYPE"=NULL, "zn" =NULL, "BL" = NULL, "TH" = NULL, "MODE" = NULL )
infor2 <- data.frame( "DATA" = NULL, "TYPE"=NULL, "zn" =NULL, "BL" = NULL, "TH" = NULL, "MODE" = NULL )
alpha0 <- 0.7#1.3#
thet <-   sapply(1:length(phi0), function(k) 1-phi0[k]^alpha0)
c1   <-   1/sapply(1:length(phi0), function(k) (1-phi0[k])^alpha0/thet[k])
title<-   TeX('$\\widehat{c}(1)$')# TeX('$\\widehat{\\theta}_{| \\mathbf{X}|}$') #
for(N in 1:1000){
print(N)
for(j in 1:length(phi0)){
phi    <- phi0[j]
path   <- abs(arima.sim(n=n, list(ar=phi, ma=0), rand.gen=function(n) rt(n,df=alpha0) ))
n      <- length(path)
alpha  <- (1/alphaestimator(path,k1=floor(n^0.8))$xi)#;print(alpha)
#alpha <- alpha0
sorted <- sort(path,decreasing = T)
p      <- 1#alpha#
for(i in 1:length(bu)){
mn  <- floor(n/bu[i])
maxi  <- sapply( 1:mn, function(k) max(   path[((k-1)*bu[i] + 1):(k*bu[i])] )  )
sumaalpha <- sapply( 1:mn, function(k) sum(   path[((k-1)*bu[i] + 1):(k*bu[i])]^alpha )  )
#Sorted Paths
n2 <- mn
#sortedmaxi <- sort(maxi, decreasing = TRUE); #print(n2)
#sortedsumaalpha <- sort(sumaalpha, decreasing=T)
#Thresholds
kn      <-  max(1,floor( (n)/bu[i]^thr2[1] ) )+1
th3     <- sort(maxi, partial = mn - kn +1 )[(mn-kn+1)]   #sortedmaxi[ max(1,floor( (n)/bu[i]^thr2[1])) +1 ]                ## supremom norm th.
th4     <- sort(sumaalpha, partial = mn - kn +1 )[(mn-kn+1)] #sortedsumaalpha[ max(1,floor( (n)/bu[i]^thr2[1]))+1 ]
#Index
ind2     <- which(maxi > th3 )                                         ## Careful not to use >=.
ind4    <-  which(sumaalpha > th4)
if(p != alpha){
suma  <- sapply( 1:floor(n/bu[i]), function(k) sum(   path[((k-1)*bu[i] + 1):(k*bu[i])]^p )  )
#sortedsuma <- sort(suma, decreasing = TRUE)
## thresholds
#th1     <- th11 <- sorted[ max(2,floor(n^thr[1])) ]                        ## empirical th.
th2     <-  sort(suma, partial = mn-kn+1)[(mn-kn+1)]    #sortedsuma[ max(1,floor( (n)/bu[i]^thr2[1]))+1 ]                ## p-norm th.          ## a-norm th
## index
#ind1     <- which(suma > th1^(alpha) )
ind1     <- which(suma > th2 )                                            ## choosing clusters
# functions c(1)
g1 <- function(vector, p)      (sum(vector^alpha)/(sum(vector^p)^alpha))          ##1/c(p)
g2 <- function(vector,th3)     sum( sum(vector) > th3 )
g3 <- function(vector,th3)     sum( vector > th3 )
g4 <- function(vector, p)      (sum(vector^p)^alpha/(sum(vector^alpha)))            ## c(p)
#estim1       <-  mean( sapply(ind1,  function(k)    g1(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2       <-  sum(  sapply(1:n2,  function(k)    g2(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim3       <-  sum(  sapply(1:n2,  function(k)    g3(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim4       <-  mean( sapply(ind4, function(k)   g4(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2       <-   estim2/estim3
}
else{
# functions theta
g1 <- function(vector, p)      (max(vector^p)/sum(vector^p))
g2 <- function(vector,th3)     sum( vector > th3)#sum(vector^p)/max(vector^p)  #
estim4       <-  mean( sapply(ind4, function(k)     g1(path[((k-1)*bu[i] +1):(k*bu[i])] , p)  ))
estim2      <-   mean(sapply(ind2, function(k)      g2(path[((k-1)*bu[i] +1):(k*bu[i])] , th3 )  ))
estim2 <- 1/estim2
}
if(j==1){
#if(p!=alpha)  infor1       <- rbind( infor1, c(estim1, 3, th2, bu[i], thr2[1], mode=j))  ##lp inference
infor1       <- rbind( infor1, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor1       <- rbind( infor1, c(estim4, 2, th4, bu[i], thr2[1], mode=j))  ##la-inference
}
else{
#if(p!=alpha)  infor2       <- rbind( infor2, c(estim1, 3, th2, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim2, 1, th3, bu[i], thr2[1], mode=j))
infor2       <- rbind( infor2, c(estim4, 2, th4, bu[i], thr2[1], mode=j))
}
}
}
}
save(infor1,infor2,title,phi0,alpha0,bu,n, file="1706c12000.Rdata")
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
save(infor1,infor2,title,phi0,alpha0,bu,n, file="1706c12000.Rdata")
#thet <- c1
niceplot <- function(infor,estim, title){
gg<- ggplot(infor, aes( y = DATA,  type=as.factor(BL), fill = as.factor(TYPE) ))+
#fill=as.factor(MODE), colour = as.factor(MODE)) +
geom_boxplot(#"#4271AE",
colour = "#4271AE", alpha = 1,outlier.colour = "azure2", outlier.shape = 1, outlier.size = 0.1, outlier.alpha = 1)+ #+geom_point(alpha=0.1,pch=16,size=0.5)+
scale_fill_manual(values = c('white',"lightsteelblue3","gray"))
#geom_hline(yintercept=thet, color = "darkgrey", alpha = 0.5,lty=2)
gg <-  addingtitles(gg,"block length",title,estim)
return(gg)
}
addingtitles <- function(gg,title,title2=" ",estim){
gg <- gg +
geom_hline(yintercept=estim,lty=2, col="blue", alpha=1) +
scale_y_continuous(name =" " , labels = c(0,round(estim,3),1), breaks = c(0,round(estim,3),1), limits=c(0,3)
)+
scale_x_continuous(name = title, labels=sapply(1:6, function(k) 2^k), breaks=seq(-0.32,0.32,0.125) )+
theme_bw()+
ggtitle(title2)+
theme(#panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 10 ,face = "bold", hjust=0),
text=element_text(),
axis.title = element_text(size=50),
axis.title.y= element_text(size=24,angle=0),
axis.title.x= element_text(size=10,angle=0),
axis.text.x = element_text(colour="black", size = 10, angle = 15 ),
axis.text.y = element_text(colour="black", size = 10),
axis.line =   element_line(size=0.1, colour = "black"),
legend.position="none")
return(gg)
}
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
load("1706c14000.Rdata")
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
load("1706c18000.Rdata")
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
load("1706c18000.Rdata")
load("1706c12000.Rdata")
names(infor2) <- names(infor1) <-  c("DATA", "TYPE", "zn", "BL", "TH", "MODE")
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
addingtitles <- function(gg,title,title2=" ",estim){
gg <- gg +
geom_hline(yintercept=estim,lty=2, col="blue", alpha=1) +
scale_y_continuous(name =" " , labels = c(0,round(estim,3),1), breaks = c(0,round(estim,3),1), limits=c(0,3.5)
)+
scale_x_continuous(name = title, labels=sapply(1:6, function(k) 2^k), breaks=seq(-0.32,0.32,0.125) )+
theme_bw()+
ggtitle(title2)+
theme(#panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 10 ,face = "bold", hjust=0),
text=element_text(),
axis.title = element_text(size=50),
axis.title.y= element_text(size=24,angle=0),
axis.title.x= element_text(size=10,angle=0),
axis.text.x = element_text(colour="black", size = 10, angle = 15 ),
axis.text.y = element_text(colour="black", size = 10),
axis.line =   element_line(size=0.1, colour = "black"),
legend.position="none")
return(gg)
}
g1 <- niceplot(infor1,estim=c1[1],title)
g2 <- niceplot(infor2,estim=c1[2],title)
grid.arrange(g1,g2,nrow=1)
